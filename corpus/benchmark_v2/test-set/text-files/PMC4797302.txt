
The S. cerevisiae Hi-C contact data (HindIII, pre-FDR, no masking) from (7) (Supplementary Data) were downloaded from https://noble.gs.washington.edu/proj/yeastarchitecture/sup.html. We performed explicit-factor normalization of this contact data to control for GC content, mappability and fragment length using HiC- Norm (25) genome-wide (chromosome by chromosome) as per (17) and then generated a new 3D reconstruction using the constrained optimization approach (7). The HiCNorm source code was downloaded from http://www.people.fas.harvard.edu/∼junliu/HiCNorm/.
The raw ChIP-seq data set (18), which contains three input samples (Swi6, Tup1 and RNA polymerase II phosphorylated at serine 5 (Pol2ser5p)) and a mock immunoprecipitation (IP) control sample (DMSO, Illumina), was obtained from GEO (data set GSE51251; http://www.ncbi. nlm.nih.gov/geo/query/acc.cgi?acc = GSE51251). We converted the raw sequencing SRA data to FASTQ format using 'fastq-dump' version 2.3.4 in the sequence read archive (SRA) Toolkit (26). We aligned the reads to the S. cerevisiae reference genome (sacCer2) using Bowtie 2 (27) version 2.2.1 with default parameters and then converted the sequence alignment / map (SAM) output to binary alignment / map (BAM) format using SAMtools (28) version0.1.19-44428cd. We filtered the sequencing reads (using the R package 'ShortRead' (29) version 1.20.0 with a custom filter) to retain only those with two or less expected errors per read: given a Phred quality score q for each base call, the probability that a base call is erroneous is P = 10 (− q / 10) , which is then summed over the bases in the read to give the expected errors per read. Using 'ShortRead' (29), we deduplicated the reads to control for PCR amplification bias (30,31) and masked the highly repetitive chromosome XII rDNA region (via a custom filter) because of the difficulty of aligning short reads there. We log 2 -normalized each ChIP-seq sample to the mock IP control using the function get.smoothed.enrichment.mle() in the R package 'spp' (32) version 1.11 with a 200 basepair (bp) bandwidth and 100 bp stepsize. 'spp' was downloaded from http://compbio.med. harvard.edu/Supplements/ChIP-seq/.
We performed a smoothing step to control for the local dependency of the signal in linear genomic space, since we are interested in identifying 3D hotspots of physically proximal yet genomically distal ChIP-seq peaks in subsequent analyses. Specifically, we smoothed each normalized ChIP-seq signal along each chromosome arm using SuperSmoother (33), which is implemented as supsmu() in R (version 3.0.2) package 'stats', with the span determined by cross-validation. We then took the residuals of each smoothed normalized signal -this constitutes the final 'ChIP-seq peak height' that we proceeded to superpose onto the 3D genome reconstruction.
The 3D genome reconstruction consists of a series of beads spaced along each chromosome; each bead has a genomic position and (X,Y,Z) coordinates. For each ChIP-seq input, we binned its peak height data (i.e. the residuals of the smoothed log 2 -normalized signal) such that each bin was centered on a bead. We then assigned to each bead the most extreme ChIP-seq peak height (positive or negative) from the bin centered on that bead. The result is a 3D chromatin configuration reconstruction overlaid with functional genomic data: each bead now has a genomic position, physical coordinates (X,Y,Z) and a ChIP-seq peak height value. We visualized this superposed 3D reconstruction in MacPy- MOL 1.3 (34) by first converting the data to the Protein Data Bank (PDB) file format (35) with the ChIP-seq peak height value rescaled as the temperature factor (B-factor) in the PDB file.
We applied PRIM using the R package 'prim' (36) to discover 3D hotspots in ChIP-seq peak height superposed on the 3D reconstruction. We used the default parameter settings peel alpha = 0.5 and paste alpha = 0.01 (we explored alternative settings subsequently) and used min beads = 25, the smallest parameter setting out of those tested (10, 25, 50 and 100) for which inter-chromosomal hotspots could be detected. After applying PRIM, each bead in the superposed 3D reconstruction now has a genomic position, physical (X,Y,Z) coordinates, a ChIP-seq peak height value and a numerical PRIM box label (the largest numerical label is a placeholder for the beads that were not boxed). We estimated the significance of all of the PRIM boxes (except for the placeholder) by permutations as follows. We preserved the mapping of beads to PRIM boxes, and then permuted the ChIP-seq peak height along each chromosome. Then, we computed the mean ChIP-seq peak height for each PRIM box from the permuted data. We repeated this for a total of 10 5 permutations. The P-value of each box was estimated by comparing its mean ChIP-seq peak height from the observed data to its mean ChIP-seq peak height values from the permuted data. We ranked these potential 3D hotspots by P-value and Holm-adjusted the P-values to account for multiple testing. To gauge the effect size of the mean ChIP-seq peak height of each hotspot, we also computed Z-scores: the difference between the observed mean outcome and the mean of the mean outcomes across all permutations, divided by the standard deviation of the mean outcomes across all permutations.
We applied k-NN regression to the ChIP-seq peak height superposed on the 3D reconstruction using the R package 'FNN' (37), where k is the specified number of physically proximal beads to be analyzed together as a grouping. First, we selected 'seed' beads evenly spaced along each chromosome by a bead interval of 0.5*k. Next, for each seed bead, we found its k nearest beads in Euclidean distance via the function knn.index() to create a bead grouping. Finally, we found the mean ChIP-seq peak height of each bead grouping via the function knn.reg() and ranked the list of bead groupings by mean ChIP-seq peak height.
We normalized the S. cerevisiae contact data from (7) using HiCNorm (25) (see 'Methods') and then generated a new 3D genome reconstruction from the normalized contact data via the constrained optimization approach from (7) as per (17) (the original study (7) preceded the formalization of pipelines for normalizing Hi-C contact data (25,38- 40)).
