
For each organism considered in the study (Saccharomyces cerevisiae, Mus musculus and Homo sapiens), a specific gene-GO association file was downloaded from the website of the GO Annotation project of the European Bioinformatics Institute (August 13, 2009) from http://www .geneontology.org/GO.current.annotations.shtml. Additionally, on the sameThe hypothesis that the GOI belongs to the population of the random gene sets is tested and a P-value is returned. In addition, users may choose from several visualization tools to discover more about the functional relationships between the GOI. day an ontology file was downloaded from http://archive.geneontology.org/ latest-termdb/go_daily-termdb.obo-xml.gz. The definition file was also downloaded from the GO website and it was used to construct a DAG in the biological process subspace. We have developed a  Python library with a set of application programming interfaces for building different GOrelated graphs and performing various queries (Muller et al., 2009). This library is based on the Python package NetworkX (Hagberg et al., 2008). In a graph representation of the GO, referred to as GOGraph, each node (vertex) represents a GO term and each directed edge corresponds to the IS_A relationship between a parent-child GO term pair. The directed edges between terms represent their semantic relationship such that the concept of a parent node subsumes those of its children nodes. Hence, the constructed GOGraph obeys the 'true path rule' or in other words the pathway from a child term to the most top-level parent is always true. Then, genes are added as another type of node to the GOGraph via an edge to its associated GO term(s) to create the GOGeneGraph. The GOGeneGraph is further modified by the addition of edges between terms that share the same gene annotations. Associating GO terms with the genes they annotate enables the calculation of semantic distance for edges from a GOGraph using the established methods, see Section 2.2 for details. After initialization of the edge distances, the graph is further transformed into a weighted, undirected graph, so that the functional coherence of list of GO terms can be reflected by connectivity and distances among the terms rather than the directionality. The algorithm for constructing a GOGeneGraph is detailed in Supplementary Algorithm 1.
